{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\wordcount\\\\wordcount\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useRef}from\"react\";function useWordGame(){var startingTime=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(startingTime),_useState4=_slicedToArray(_useState3,2),timeRemaining=_useState4[0],setTimeRemaining=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isTimeRunning=_useState6[0],setIsTimeRunning=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),wordCount=_useState8[0],setWordCount=_useState8[1];var textBoxRef=useRef(null);var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),result=_useState10[0],setResult=_useState10[1];function handleChange(e){var value=e.target.value;setText(value);}function calculateWordCount(text){var wordsArr=text.trim().split(\" \");return wordsArr.filter(function(word){return word!==\"\";}).length;}function startGame(){setIsTimeRunning(true);setTimeRemaining(startingTime);setText(\"\");setWordCount(0);textBoxRef.current.disabled=false;textBoxRef.current.focus();}function endGame(){setIsTimeRunning(false);setWordCount(calculateWordCount(text));setResult(wordCount);}useEffect(function(){if(isTimeRunning&&timeRemaining>0){setTimeout(function(){setTimeRemaining(function(time){return time-1;});},1000);}else if(timeRemaining===0){endGame();}},[timeRemaining,isTimeRunning]);return{result:result,textBoxRef:textBoxRef,handleChange:handleChange,text:text,isTimeRunning:isTimeRunning,timeRemaining:timeRemaining,startGame:startGame,wordCount:wordCount};}export default useWordGame;","map":{"version":3,"sources":["C:/Users/User/Desktop/wordcount/wordcount/src/useWordGame.js"],"names":["useState","useEffect","useRef","useWordGame","startingTime","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textBoxRef","result","setResult","handleChange","e","value","target","calculateWordCount","wordsArr","trim","split","filter","word","length","startGame","current","disabled","focus","endGame","setTimeout","time"],"mappings":"oIAAA,OAAQA,QAAR,CAAkBC,SAAlB,CAA6BC,MAA7B,KAA0C,OAA1C,CAEA,QAASC,CAAAA,WAAT,EAAwC,IAAnBC,CAAAA,YAAmB,2DAAJ,EAAI,eACZJ,QAAQ,CAAC,EAAD,CADI,wCAC7BK,IAD6B,eACvBC,OADuB,8BAEMN,QAAQ,CAACI,YAAD,CAFd,yCAE7BG,aAF6B,eAEdC,gBAFc,8BAGMR,QAAQ,CAAC,KAAD,CAHd,yCAG7BS,aAH6B,eAGdC,gBAHc,8BAIFV,QAAQ,CAAC,CAAD,CAJN,yCAI7BW,SAJ6B,eAIlBC,YAJkB,eAKpC,GAAMC,CAAAA,UAAU,CAAGX,MAAM,CAAC,IAAD,CAAzB,CALoC,eAMRF,QAAQ,CAAC,CAAD,CANA,0CAM7Bc,MAN6B,gBAMrBC,SANqB,gBAQpC,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,IACdC,CAAAA,KADc,CACLD,CAAC,CAACE,MADG,CACdD,KADc,CAErBZ,OAAO,CAACY,KAAD,CAAP,CACH,CAED,QAASE,CAAAA,kBAAT,CAA4Bf,IAA5B,CAAkC,CAC9B,GAAMgB,CAAAA,QAAQ,CAAGhB,IAAI,CAACiB,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,CAAjB,CACA,MAAOF,CAAAA,QAAQ,CAACG,MAAT,CAAgB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,GAAK,EAAb,EAApB,EAAqCC,MAA5C,CACH,CAED,QAASC,CAAAA,SAAT,EAAqB,CACjBjB,gBAAgB,CAAC,IAAD,CAAhB,CACAF,gBAAgB,CAACJ,YAAD,CAAhB,CACAE,OAAO,CAAC,EAAD,CAAP,CACAM,YAAY,CAAC,CAAD,CAAZ,CACAC,UAAU,CAACe,OAAX,CAAmBC,QAAnB,CAA8B,KAA9B,CACAhB,UAAU,CAACe,OAAX,CAAmBE,KAAnB,GACH,CAED,QAASC,CAAAA,OAAT,EAAmB,CACfrB,gBAAgB,CAAC,KAAD,CAAhB,CACAE,YAAY,CAACQ,kBAAkB,CAACf,IAAD,CAAnB,CAAZ,CACAU,SAAS,CAACJ,SAAD,CAAT,CACH,CAEDV,SAAS,CAAC,UAAM,CACZ,GAAGQ,aAAa,EAAIF,aAAa,CAAG,CAApC,CAAuC,CACnCyB,UAAU,CAAC,UAAM,CACbxB,gBAAgB,CAAC,SAAAyB,IAAI,QAAIA,CAAAA,IAAI,CAAG,CAAX,EAAL,CAAhB,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CAJD,IAIO,IAAG1B,aAAa,GAAK,CAArB,CAAwB,CAC3BwB,OAAO,GAEV,CACJ,CATQ,CASN,CAACxB,aAAD,CAAgBE,aAAhB,CATM,CAAT,CAWA,MAAO,CAACK,MAAM,CAANA,MAAD,CAASD,UAAU,CAAVA,UAAT,CAAqBG,YAAY,CAAZA,YAArB,CAAmCX,IAAI,CAAJA,IAAnC,CAAyCI,aAAa,CAAbA,aAAzC,CAAwDF,aAAa,CAAbA,aAAxD,CAAuEoB,SAAS,CAATA,SAAvE,CAAkFhB,SAAS,CAATA,SAAlF,CAAP,CACH,CAED,cAAeR,CAAAA,WAAf","sourcesContent":["import {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction useWordGame(startingTime = 10) {\r\n    const [text, setText] = useState(\"\")\r\n    const [timeRemaining, setTimeRemaining] = useState(startingTime)\r\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\r\n    const [wordCount, setWordCount] = useState(0)\r\n    const textBoxRef = useRef(null)\r\n    const [result, setResult] = useState(0) ;\r\n    \r\n    function handleChange(e) {\r\n        const {value} = e.target\r\n        setText(value)\r\n    }\r\n    \r\n    function calculateWordCount(text) {\r\n        const wordsArr = text.trim().split(\" \")\r\n        return wordsArr.filter(word => word !== \"\").length\r\n    }\r\n    \r\n    function startGame() {\r\n        setIsTimeRunning(true)\r\n        setTimeRemaining(startingTime)\r\n        setText(\"\")\r\n        setWordCount(0)\r\n        textBoxRef.current.disabled = false\r\n        textBoxRef.current.focus()\r\n    }\r\n    \r\n    function endGame() {\r\n        setIsTimeRunning(false)\r\n        setWordCount(calculateWordCount(text))\r\n        setResult(wordCount)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isTimeRunning && timeRemaining > 0) {\r\n            setTimeout(() => {\r\n                setTimeRemaining(time => time - 1)\r\n            }, 1000)\r\n        } else if(timeRemaining === 0) {\r\n            endGame()\r\n\r\n        }\r\n    }, [timeRemaining, isTimeRunning])\r\n    \r\n    return {result, textBoxRef, handleChange, text, isTimeRunning, timeRemaining, startGame, wordCount}\r\n}\r\n\r\nexport default useWordGame\r\n"]},"metadata":{},"sourceType":"module"}